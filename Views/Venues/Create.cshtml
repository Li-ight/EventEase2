@model EventEase.Models.Venue

@{
    ViewData["Title"] = "Create Venue";
}

<h2>Create Venue</h2>

<form asp-action="Create" method="post" enctype="multipart/form-data">
    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Location" class="control-label"></label>
        <input asp-for="Location" class="form-control" />
        <span asp-validation-for="Location" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Capacity" class="control-label"></label>
        <input asp-for="Capacity" class="form-control" />
        <span asp-validation-for="Capacity" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Create</button>
</form>

@if (ViewData.ModelState.ContainsKey(string.Empty) && ViewData.ModelState[string.Empty].Errors.Count > 0)
{
    <div class="text-danger">
        @foreach (var error in ViewData.ModelState[string.Empty].Errors)
        {
            <p>@error.ErrorMessage</p>
        }
    </div>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
